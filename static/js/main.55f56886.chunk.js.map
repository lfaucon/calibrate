{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Header","_ref","show","setShow","view","setView","react_default","a","createElement","className","onClick","Bet","_ref2","title","proba","outcome","updateBet","deleted","undefined","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","toFixed","BetList","_ref3","bets","map","bet","i","App_Bet","assign","key","id","o","MakeBet","_ref4","addBet","_useState3","_useState4","setProba","_useState5","_useState6","setTitle","handleClick","multiplier","p","Math","exp","log","onChange","e","target","value","style","margin","length","parseFloat","Help","Stats","_ref5","doc","filter","b","reduce","acc","push","keys","sort","_p","x","App","_useState7","state","localStorage","getItem","JSON","parse","_unused","getState","_useState8","setBets","_useState9","_useState10","_useState11","_useState12","App_Header","App_BetList","idx","obj","objectSpread","newBets","setItem","stringify","App_MakeBet","concat","toConsumableArray","App_Help","App_Stats","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55f56886.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst getState = () => {\n  try {\n    const state = localStorage.getItem(\"lpfaucon.calibrate.state\");\n    return state ? JSON.parse(state) : [];\n  } catch {\n    return [];\n  }\n};\n\nconst Header = ({ show, setShow, view, setView }) => {\n  return (\n    <div className=\"bet-list\">\n      <div className=\"container\">\n        <div\n          className={\"bet-button\" + (view === \"bets\" ? \" button-selected\" : \"\")}\n          onClick={() => setView(\"bets\")}\n        >\n          <i className=\"fas fa-flask\" />\n        </div>\n        {show && (\n          <div className=\"bet-button\" onClick={() => setShow(!show)}>\n            <i className=\"fas fa-eye\" />\n          </div>\n        )}\n        {!show && (\n          <div className=\"bet-button\" onClick={() => setShow(!show)}>\n            <i className=\"fas fa-eye-slash\" />\n          </div>\n        )}\n        <div\n          className={\n            \"bet-button\" + (view === \"stats\" ? \" button-selected\" : \"\")\n          }\n          onClick={() => setView(\"stats\")}\n        >\n          <i className=\"fas fa-chart-bar\" />\n        </div>\n        <div\n          className={\"bet-button\" + (view === \"help\" ? \" button-selected\" : \"\")}\n          onClick={() => setView(\"help\")}\n        >\n          <i className=\"fas fa-question\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Bet = ({ show, title, proba, outcome, deleted, updateBet }) => {\n  if (!show && outcome !== undefined) {\n    return null;\n  }\n  const [open, setOpen] = useState(false);\n  return (\n    <div>\n      <div className=\"container\">\n        <span className=\"bet-proba\">{proba.toFixed(2)}</span>\n        <span className=\"bet-title\">{title}</span>\n\n        <div className=\"bet-button\" onClick={() => setOpen(!open)}>\n          <i className=\"fas fa-pen\" />\n        </div>\n      </div>\n      {open && (\n        <div className=\"container\">\n          <div\n            className={\n              \"bet-button button-green\" +\n              (outcome === true ? \" button-selected\" : \"\")\n            }\n            onClick={() => updateBet({ outcome: true })}\n          >\n            <i className=\"fas fa-check\" />\n          </div>\n          <div\n            className={\n              \"bet-button button-red\" +\n              (outcome === false ? \" button-selected\" : \"\")\n            }\n            onClick={() => updateBet({ outcome: false })}\n          >\n            <i className=\"fas fa-times\" />\n          </div>\n          <div\n            className=\"bet-button\"\n            onClick={() => updateBet({ deleted: true })}\n          >\n            <i className=\"fas fa-trash\" />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst BetList = ({ show, bets, updateBet }) => {\n  return (\n    <div className=\"bet-list\">\n      {bets.map((bet, i) => (\n        <Bet\n          key={bet.id}\n          {...bet}\n          show={show}\n          updateBet={o => updateBet(i, o)}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst MakeBet = ({ bets, addBet }) => {\n  const [proba, setProba] = useState(0.5);\n  const [title, setTitle] = useState(\"\");\n\n  const handleClick = multiplier => () => {\n    const p = 1 - Math.exp(Math.log(1 - proba) - multiplier * 0.42);\n    if (p >= 0.499 && p <= 0.99) setProba(p);\n  };\n\n  const submitBet = () => {\n    const id = bets.length > 0 ? bets[bets.length - 1].id + 1 : 0;\n    const p = parseFloat(proba.toFixed(2));\n    if (title) addBet({ proba: p, title, id });\n    setTitle(\"\");\n  };\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  return (\n    <div className=\"new-bet\">\n      <textarea\n        onChange={handleTitleChange}\n        className=\"make-bet-textarea\"\n        value={title}\n      />\n      <div className=\"probability-container\">\n        <i className=\"fas fa-minus-square\" onClick={handleClick(-1)} />\n        <span style={{ margin: \"8px\" }}>{proba.toFixed(2)}</span>\n        <i className=\"fas fa-plus-square\" onClick={handleClick(1)} />\n      </div>\n      <span onClick={submitBet} className=\"make-bet-button\">\n        Make Bet\n      </span>\n    </div>\n  );\n};\n\nconst Help = () => {\n  return (\n    <div className=\"container\">\n      <span>For help, please contact lpfaucon@gmail.com</span>\n    </div>\n  );\n};\n\nconst Stats = ({ bets }) => {\n  const pastBets = bets.filter(b => b.outcome !== undefined);\n  const doc = pastBets.reduce((acc, bet) => {\n    acc[bet.proba] = acc[bet.proba] || [];\n    acc[bet.proba].push(bet.outcome);\n    return acc;\n  }, {});\n\n  return (\n    <div>\n      <table className=\"container stat-container\">\n        <tbody>\n          <tr>\n            <th>Category</th>\n            <th>Result</th>\n            <th>Count</th>\n          </tr>\n          {Object.keys(doc)\n            .sort()\n            .map(p => {\n              const _p = (100 * doc[p].filter(x => x).length) / doc[p].length;\n              return (\n                <tr key={p}>\n                  <td>{100 * p}%</td>\n                  <td>{_p.toFixed(1)}%</td>\n                  <td>{doc[p].length}</td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [bets, setBets] = useState(getState());\n  const [view, setView] = useState(\"bets\");\n  const [show, setShow] = useState(false);\n\n  const addBet = bet => {\n    const newBets = [...bets, bet];\n    localStorage.setItem(\"lpfaucon.calibrate.state\", JSON.stringify(newBets));\n    setBets(newBets);\n  };\n\n  const updateBet = (idx, obj) => {\n    bets[idx] = { ...bets[idx], ...obj };\n    const newBets = bets.filter(b => !b.deleted);\n    localStorage.setItem(\"lpfaucon.calibrate.state\", JSON.stringify(newBets));\n    setBets(newBets);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header setView={setView} view={view} show={show} setShow={setShow} />\n      {view === \"bets\" && (\n        <BetList show={show} bets={bets} updateBet={updateBet} />\n      )}\n      {view === \"bets\" && <MakeBet bets={bets} addBet={addBet} />}\n      {view === \"help\" && <Help />}\n      {view === \"stats\" && <Stats bets={bets} />}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}